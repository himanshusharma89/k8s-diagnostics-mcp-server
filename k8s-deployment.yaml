---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-diagnostics-mcp
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-diagnostics-mcp
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "events", "namespaces", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-diagnostics-mcp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-diagnostics-mcp
subjects:
- kind: ServiceAccount
  name: k8s-diagnostics-mcp
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-diagnostics-mcp
  namespace: default
  labels:
    app: k8s-diagnostics-mcp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-diagnostics-mcp
  template:
    metadata:
      labels:
        app: k8s-diagnostics-mcp
    spec:
      serviceAccountName: k8s-diagnostics-mcp
      containers:
      - name: k8s-diagnostics-mcp
        image: infracloud/k8s-diagnostics-mcp:latest
        ports:
        - containerPort: 8080
        env:
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-diagnostics-mcp-service
  namespace: default
  labels:
    app: k8s-diagnostics-mcp
spec:
  selector:
    app: k8s-diagnostics-mcp
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP